
@{
    ViewData["Title"] = "Register";
}


<div class="row">
    <div class="col-3"></div>
    <div class="col-6">
        <h1>Register</h1>
        <form method="post" action="~/api/register" id="userForm">
            <div class="mb-3">
                <label for="InputName" class="form-label">姓名</label>
                <input type="text" class="form-control" id="InputName" name="name">

            </div>
            <div class="mb-3">
                <label for="InputEmail" class="form-label">電子郵件</label>
                <input type="email" class="form-control" id="InputEmail" name="email">
            </div>
            <div class="mb-3">
                <label for="InputAge" class="form-label">年紀</label>
                <input type="number" class="form-control" id="InputAge" name="age">
            </div>

            <div class="mb-3">
                <label for="formfile" class="form-label">圖像</label>
                <input type="file" class="form-control" id="formFile" name="avatar">
            </div>

            <button type="submit" class="btn btn-primary" id="buttonSubmit">送出</button>
        </form>
        <div id="div1" class="alert alert-info mt-3"></div>

    </div>
    <div class="col-3"></div>
</div>

@section Styles{
    <style>


    </style>

}

@section Scripts{
       <script>
        const divResult = document.querySelector('#div1')
        const submitButton = document.querySelector('#buttonSubmit')
        const inputName = document.querySelector('#InputName')
        const inputEmail = document.querySelector('#InputEmail')
        const inputAge = document.querySelector('#InputAge')




        submitButton.addEventListener('click',async(event)=>{
            event.preventDefault(); //防止預設行為發生 -> 不要有送出的行為

            //[GET 方法傳遞表單
            //  url?參數=  QueryString => Querystring（查詢字串）是附加在網頁URL結尾的資訊。主要是在Url上傳遞資料，可能是一個搜尋字串、頁碼、某項特定的指標…或類似的東西 ]
            //在網址結尾加上一個問號（？）開始，每一組參數都是用「＆」區隔開來，是一種KEY / Value的組合。
            //console.log(inputName.value);
            //const url = `@Url.Content("~/api/register/")?email=${inputEmail.value}&age=${inputAge.value}&name=${inputName.value}`
            //const response =  await fetch(url);
            //const data = await response.text();
            //divResult.textContent = data;


            //表單一般都是透過 [POST 方法傳遞表單]  因為通常都是帶有敏感的資訊
            const myForm = document.querySelector('#userForm')
            const formData = new FormData(myForm)                           //可以把整個表單的資料包在一個FormData的物件裡面做傳遞,FormData是JavaScript的物件,用來收集和發送表單資料

            //formData.append("password", "12345678");   //額外的資訊         //new出一個空的FormData物件,append() 裡面也是有一key value 把資料也加進FormData
            
            //讀出formData中的資料
            //for(const pair of formData.entries()){           //透過entries()方法讀資出一筆一筆的資料
            //    console.log(`${pair[0]}:${pair[1]}`);        // 一筆一筆的資料 就是一組 pair[0] => key   pair[1] => value
            //}


            const url = '@Url.Content("~/api/register/")';
            const response = await fetch(url, {
                method: 'POST',
                body: formData
            });

            const data = await response.text();
            divResult.textContent = data;

        

        
        })

        






    </script>

}